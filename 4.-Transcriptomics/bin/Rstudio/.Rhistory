panel.background = element_rect(color = 'black',fill = NA)
))
#dev.copy(png,paste0(outputPrefix, "-PCA.png"))
ggsave(pcaplot,file=paste0(outputPrefix, "-ggplot2.png"))
# heatmap of data
library("RColorBrewer")
library("gplots")
# 35 top expressed genes with heatmap.2
select <- order(rowMeans(counts(ddsClean,normalized=T)),decreasing=T)[1:35]
my_palette <- colorRampPalette(c("blue",'white','red'))(n=35)
heatmap.2(assay(vsd)[select,], col=my_palette,
scale="row", key=T, keysize=1, symkey=T,
density.info="none", trace="none",
cexCol=0.6, labRow=F,
main="Heatmap of 35 DE Genes in ozone Comparison")
dev.copy(png, paste0(outputPrefix, "-HEATMAP.png"))
dev.off()
dev.off()
read.csv("Abies_DESeq2-replaceoutliers.csv")
select
ddsClean
# 35 top expressed genes with heatmap.2
select <- order(rowMeans(counts(ddsClean,normalized=T)),decreasing=T)[1:35]
my_palette <- colorRampPalette(c("blue",'white','red'))(n=35)
heatmap.2(assay(vsd)[select,], col=my_palette,
scale="row", key=T, keysize=1, symkey=T,
density.info="none", trace="none",
cexCol=0.6, labRow=F,
main="Heatmap of 35 DE Genes in ozone Comparison")
dev.copy(png, paste0(outputPrefix, "-HEATMAP.png"))
dev.off()
# Load data
alldata<-read.delim("../../metadata/all_genes/allreadsgenes.txt")
alldata <- as.data.frame(alldata)
head (alldata)
# Load data
alldata<-as.data.frame(read.delim("../../metadata/all_genes/allreadsgenes.txt"))
# Convert dataframe to data matrix
x<-alldata
rownames(x)<-alldata[,1]
x<-x[ ,2:ncol(x)]
alldata<-as.matrix(x)
########################################### Healthy vs Damaged 170 ppb###########################################
# Select subset data(descart data)
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
############################################
# Add characteristics
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label<- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples<-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets<- data.frame(tratamiento,label,samples)
rownames(targets)<- label
targets
### Filtering genes
table(rowSums(DCvsHC)==0)
suma <- rowSums(DCvsHC)
filtconteos <- DCvsHC[suma != 0,]
dim(filtconteos)
head(filtconteos)
### Class DESeqDataSet
ddsHTSeq <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
# Differential expression analysis
#differential expression analysis steps are wrapped into a single function, DESeq()
dds <- DESeq(ddsHTSeq)
# restuls talbe will be generated using results() which will include:
#  log2 fold changes, p values and adjusted p values
res <- results(dds)
res
summary(res)
summary(res)
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
resdata
names(resdata)[1] <- 'gene'
names(resdata)
outputPrefix <- "Abies_DESeq2"
write.csv(resdata, file = paste0(outputPrefix, "-results-with-normalized_all.csv"))
# filter results by p value
res= subset(res, padj<0.05)
# order results by padj value (most significant to least)
res <- res[order(res$padj),]
res
# should see DataFrame of baseMean, log2Foldchange, stat, pval, padj
# save data results and normalized reads to csv
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
names(resdata)[1] <- 'gene'
write.csv(resdata, file = paste0(outputPrefix, "-results-with-normalized.csv"))
# send normalized counts to tab delimited file for GSEA, etc.
write.table(as.data.frame(counts(dds),normalized=T),
file = paste0(outputPrefix, "_normalized_counts.txt"), sep = '\t')
# produce DataFrame of results of statistical tests
mcols(res, use.names = T)
as.data.frame(mcols(res, use.name = T)
as.data.frame(mcols(res, use.name = T))
ddsClean <- replaceOutliersWithTrimmedMean(dds)
ddsClean <- DESeq(ddsClean)
temp_ddsClean <- ddsClean
temp_ddsClean <- ddsClean
tab <- table(initial = results(dds)$padj < 0.05,
cleaned = results(ddsClean)$padj < 0.05)
addmargins(tab)
tab
temp_ddsClean
resClean <- results(ddsClean)
resClean = subset(res, padj<0.1)
resClean <- resClean[order(resClean$padj),]
write.csv(as.data.frame(resClean),file = paste0(outputPrefix, "-replaceoutliers-results.csv"))
resClean
resClean = subset(res, padj<0.0.05)
temp_ddsClean <- ddsClean
resClean <- results(ddsClean)
resClean = subset(res, padj<0.0.05)
resClean = subset(res, padj<0.05)
resClean <- resClean[order(resClean$padj),]
write.csv(as.data.frame(resClean),file = paste0(outputPrefix, "-replaceoutliers-results.csv"))
resClean
# Load data
alldata<-as.data.frame(read.delim("../../metadata/all_genes/allreadsgenes.txt"))
# Convert dataframe to data matrix
x<-alldata
rownames(x)<-alldata[,1]
x<-x[ ,2:ncol(x)]
alldata<-as.matrix(x)
########################################### Healthy vs Damaged 170 ppb###########################################
# Select subset data(descart data)
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
############################################
# Add characteristics
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label<- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples<-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets<- data.frame(tratamiento,label,samples)
rownames(targets)<- label
targets
### Filtering genes
table(rowSums(DCvsHC)==0)
suma <- rowSums(DCvsHC)
filtconteos <- DCvsHC[suma != 0,]
dim(filtconteos)
head(filtconteos)
# DESeq2
#############################################################################################
### Class DESeqDataSet
ddsHTSeq <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
# Differential expression analysis
#differential expression analysis steps are wrapped into a single function, DESeq()
dds <- DESeq(ddsHTSeq)
# restuls talbe will be generated using results() which will include:
#  log2 fold changes, p values and adjusted p values
res <- results(dds)
summary(res)
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
names(resdata)[1] <- 'gene'
outputPrefix <- "Abies_DESeq2"
write.csv(resdata, file = paste0(outputPrefix, "-results-with-normalized_all.csv"))
# filter results by p value
res= subset(res, padj<0.05)
# order results by padj value (most significant to least)
res <- res[order(res$padj),]
# should see DataFrame of baseMean, log2Foldchange, stat, pval, padj
# save data results and normalized reads to csv
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
names(resdata)[1] <- 'gene'
write.csv(resdata, file = paste0(outputPrefix, "-results-with-normalized.csv"))
# send normalized counts to tab delimited file for GSEA, etc.
write.table(as.data.frame(counts(dds),normalized=T),
file = paste0(outputPrefix, "_normalized_counts.txt"), sep = '\t')
# Load data
alldata<-as.data.frame(read.delim("../../metadata/all_genes/allreadsgenes.txt"))
# Convert dataframe to data matrix
x<-alldata
rownames(x)<-alldata[,1]
x<-x[ ,2:ncol(x)]
alldata<-as.matrix(x)
########################################### Healthy vs Damaged 170 ppb###########################################
# Select subset data(descart data)
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
############################################
# Add characteristics
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label<- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples<-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets<- data.frame(tratamiento,label,samples)
rownames(targets)<- label
targets
### Filtering genes
table(rowSums(DCvsHC)==0)
suma <- rowSums(DCvsHC)
filtconteos <- DCvsHC[suma != 0,]
dim(filtconteos)
head(filtconteos)
# DESeq2
#############################################################################################
### Class DESeqDataSet
ddsHTSeq <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
# Differential expression analysis
#differential expression analysis steps are wrapped into a single function, DESeq()
dds <- DESeq(ddsHTSeq)
# restuls talbe will be generated using results() which will include:
#  log2 fold changes, p values and adjusted p values
res <- results(dds)
summary(res)
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
names(resdata)[1] <- 'gene'
outputPrefix <- "Abies_DESeq2"
write.csv(resdata, file = paste0(outputPrefix, "-results-with-normalized_all.csv"))
#Load data DESeq2 and Edge
results_DESeq2<- read.csv("Abies_DESeq2-results-with-normalized_all.csv")
#Load data DESeq2 and Edge
results_DESeq2<- read.csv("Abies_DESeq2-results-with-normalized_all.csv")
View(results_DESeq2)
View(results_DESeq2)
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(2,4,7,8)])
View(results_DESeq2_rt)
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
View(results_DESeq2_rt)
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
View(results_DESeq2_rt)
# Plot Volcano plot
ggplot(results_DESeq2_rt, aes(x=log2FoldChange, y=sig)) +
geom_point(aes(colour = TDE ),size =3.5)+
geom_text(aes(label=ifelse((results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1),
as.character(row.names(results_DESeq2_rt)),'')),hjust=0.5,vjust=0.5, size= 2, angle=35)+
scale_color_manual(values=c("grey", "#d44792"))+
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
# Plot Volcano plot
ggplot(results_DESeq2_rt, aes(x=log2FoldChange, y=sig)) +
geom_point(aes(colour = TDE ),size =3.5)+
scale_color_manual(values=c("grey", "#d44792"))+
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
# Plot Volcano plot
ggplot(results_DESeq2_rt, aes(x=log2FoldChange, y=sig)) +
geom_point(aes(colour = TDE),size =3.5)+
scale_color_manual(values=c("grey", "#d44792"))+
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
alldata<-as.data.frame(read.delim("../../metadata/all_genes/allreadsgenes.txt"))
# Convert dataframe to data matrix
x<-alldata
rownames(x)<-alldata[,1]
x<-x[ ,2:ncol(x)]
alldata<-as.matrix(x)
########################################### Healthy vs Damaged 170 ppb###########################################
# Select subset data(descart data)
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
############################################
# Add characteristics
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label<- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples<-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets<- data.frame(tratamiento,label,samples)
rownames(targets)<- label
targets
### Filtering genes
table(rowSums(DCvsHC)==0)
suma <- rowSums(DCvsHC)
filtconteos <- DCvsHC[suma != 0,]
dim(filtconteos)
head(filtconteos)
# DESeq2
#############################################################################################
### Class DESeqDataSet
ddsHTSeq <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
# Differential expression analysis
#differential expression analysis steps are wrapped into a single function, DESeq()
dds <- DESeq(ddsHTSeq)
# restuls talbe will be generated using results() which will include:
#  log2 fold changes, p values and adjusted p values
res <- results(dds)
summary(res)
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
names(resdata)[1] <- 'gene'
outputPrefix <- "Abies_DESeq2"
write.table(resdata, file = paste0(outputPrefix, "-results-with-normalized_all.csv", sep="\t", row.names=T))
write.table(resdata, file = paste0(outputPrefix, "-results-with-normalized_all.txt", sep="\t", row.names=T))
write.table(resdata, "-results-with-normalized_all.txt", sep="\t", row.names=T)
#Load data DESeq2 and Edge
results_DESeq2<- read.delim("-results-with-normalized_all.txt")
View(results_DESeq2)
# Remake tables with info that I want
results_DESeq2_rt <- data.frame(results_DESeq2[,c(1,3,6,7)])
results_DESeq2_rt$sig <- -log10(results_DESeq2$pvalue) ##Create a column with aditional info of FDR (padj)##
results_DESeq2_rt$sigadj <- -log10(results_DESeq2$padj) ##Create a column with aditional info of FDR (padj)##
##Create a column with colors depending p-adj##
results_DESeq2_rt$TDE <- (results_DESeq2_rt$padj< 0.05) & (abs(results_DESeq2_rt$log2FoldChange) > 1)
# Plot Volcano plot
ggplot(results_DESeq2_rt, aes(x=log2FoldChange, y=sig)) +
geom_point(aes(colour = TDE),size =3.5)+
scale_color_manual(values=c("grey", "#d44792"))+
xlab("log2 fold change")+
ylab("-log10 (P value)")+
theme_light(base_size = 10)+
theme(legend.position = "none")+
geom_hline(yintercept = -log10(0.05), colour = "black", linetype = "dashed", size = 0.25) + # Horizontal significance cut-off line.
geom_vline(xintercept = 1, colour = "black", linetype = "dashed", size = 0.25)+  # Vertical significance cut-off line (+).
geom_vline(xintercept = -1, colour = "black", linetype = "dashed", size = 0.25)  # Vertical significance cut-off line (+).
# Make table with over and down expressed
overxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]> 1, ]
downxpress_Ds2 <- results_DESeq2_rt[results_DESeq2_rt[,"padj"]< 0.05 & results_DESeq2_rt[,"log2FoldChange"]< -1, ]
overxpress_Ds2
results_DESeq2_rt
# Load libraries
library(limma)
library(edgeR)
library(DESeq2)
library(ggbiplot)
library (ggplot2)
# Load data. Count table
alldata <-read.delim("../../metadata/all_genes/allreadsgenes.txt")
alldata <- as.data.frame(alldata)
# Convert dataframe to data matrix
x<-alldata
rownames(x)<-alldata[,1] # Add rownames
x<-x[ ,2:ncol(x)] # Remove double col with names
alldata<-as.matrix(x)
########################################### Damaged vs Tolerant 170 ppb###########################################
##################################################################################################################
##################################################################################################################
# Select subset data(descart data)
DCvsHC<- subset(alldata, select = -c(DS_1, DS_2, DS_4,
HS_1, HS_2, HS_5,
HC17, DC47))
############################################
# Add characteristics
############################################
tratamiento <- c("DC","DC","DC","DC","DC",
"HC","HC","HC","HC","HC")
label <- c("DC_1", "DC_2","DC_3","DC_4","DC_5",
"HC_1","HC_2","HC_3","HC_4","HC_5")
samples <-c("DC1", "DC2","DC3","DC4","DC5",
"HC1","HC2","HC3","HC4","HC5")
targets <- data.frame(tratamiento,label,samples)
rownames(targets) <- label
targets
### Filtering genes
table(rowSums(DCvsHC)==0)
suma <- rowSums(DCvsHC)
filtconteos <- DCvsHC[suma != 0,]
dim(filtconteos)
head(filtconteos)
## Clase DGEList
d <- DGEList(counts = filtconteos[,1:10], group = targets$tratamiento) ## Normalization
colnames(d) <- targets$label
## Normalization
d <- calcNormFactors(d)
plotMDS(d, main="plotMDS DCvsHC")
## Dispersors stimation
d <- estimateCommonDisp(d,verbose=TRUE)
d <- estimateTagwiseDisp(d)
plotBCV(d, main="plotBCV DCvsHC")
## Test
et <- exactTest(d,pair=c("HC","DC"))
top<- topTags(et, n= Inf)
hist(top$table$FDR, breaks = 100, main = "Hist FDR DCvsHC")
abline(v=0.05, col="red",lwd=3)
### Class DESeqDataSet
dds <- DESeqDataSetFromMatrix(countData=filtconteos, colData= targets, design=~tratamiento)
### Test
dds <- DESeq(dds)
head(dds)
res <- results(dds)
head (res)
#edgeR
d$samples$norm.factors #edgeR
#DESeq2
sizeFactors(dds) #DESeq2
# First calculated comun disspersion
d$common.dispersion
# Second gen to gen dispersion of comun dispersion
head(d$tagwise.dispersion)
# First calculated stimation gen to gen
head(mcols(dds)$dispGeneEs)
# Then through an adjustment with the average counts estimate the dispersion
head(mcols(dds)$dispersion)
############################################################################################################
#Compare the tests, that is, the p-values and other results that each packet has calculated for each gene
############################################################################################################
########
# edgeR
########
head (topTags(et, n= Inf))
########
# DESeq2
########
res[rownames(topTags(et, n= Inf)),]
################################
#Plot Log fold change
################################
########
# edgeR
########p.value=0.1
de <- decideTestsDGE(et, adjust.method = "fdr" )
head(de)
detags <- rownames(d)[as.logical(de)]
plotSmear(et, de.tags=detags, main="plotSmear de edgeR") > abline(h=0, col="red", lwd=3)
##################################################################
### Sort the genes according to the attached p-value they have obtained
##################################################################
########
# edgeR
########
topSig <- top[top$table$FDR < 0.05, ]
dim(topSig)
head(topSig)
genesDEedgeR <- rownames(topSig)
head(genesDEedgeR)
topSig_export<-topSig
topSig_export$ID<-genesDEedgeR
head(topSig_export)
write.table(topSig_export, "../../metadata/DGE/EdgeR_HvsD170ppb_FDR_0.05.txt", sep="\t", row.names=T)
########
# DESeq2
########
# Sort by p-valores
resOrdered <- res[order(res$padj),]
# Only DEG
xx <-res[order(res$padj,na.last=NA),]
head(xx)
resSig2 <- xx[xx$padj < 0.05, ]
dim(resSig2)
head(resSig2)
genesDEDESeq2 <- rownames(resSig2)
genesDEDESeq2
head(resSig2)
resSig2_export<-resSig2
resSig2_export$ID<-resSig2_export
head(resSig2_export)
write.table(resSig2_export, "../../metadata/DGE/DESeq2_HvsD170ppb_FDR_0.05.txt", sep="\t", row.names=T)
topSig <- top[top$table$FDR < 5, ]
dim(topSig)
genesDEedgeR <- rownames(topSig)
head(genesDEedgeR)
topSig_export<-topSig
topSig_export$ID<-genesDEedgeR
head(topSig_export)
write.table(topSig_export, "../../metadata/DGE/EdgeR_HvsD170ppb_FDR_5.txt", sep="\t", row.names=T)
########
# DESeq2
########
xx <-res[order(res$padj,na.last=NA),]
resSig2 <- xx[xx$padj < 5, ]
dim(resSig2)
head(resSig2)
genesDEDESeq2 <- rownames(resSig2)
head(resSig2)
resSig2_export<-resSig2
resSig2_export$ID<-resSig2_export
head(resSig2_export)
write.table(resSig2_export, "../../metadata/DGE/DESeq2_HvsD170ppb_FDR_5.txt", sep="\t", row.names=T)
resdata <- merge(as.data.frame(res),
as.data.frame(counts(dds,normalized =TRUE)),
by = 'row.names', sort = FALSE)
View(resdata)
head (topTags(et, n= Inf))
(res)
topSig
as.data.frame(topSig)
dds
topTags(et, n= Inf)
d$samples$norm.factors
d$samples
